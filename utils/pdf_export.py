"""
PDF Export Utility for Educational Reports

This module provides functionality to convert markdown educational reports
to professional PDF documents for sharing with parents and teachers.
"""

import markdown
import pdfkit
from datetime import datetime
import os
from typing import Optional

def markdown_to_pdf(
    markdown_content: str, 
    output_filename: Optional[str] = None,
    student_name: str = "Student",
    output_dir: str = "reports"
) -> str:
    """
    Convert markdown educational report to PDF.
    
    Args:
        markdown_content: The markdown content to convert
        output_filename: Optional custom filename (will auto-generate if None)
        student_name: Student name for filename generation
        output_dir: Directory to save the PDF
        
    Returns:
        str: Path to the generated PDF file
    """
    
    # Create output directory if it doesn't exist
    os.makedirs(output_dir, exist_ok=True)
    
    # Generate filename if not provided
    if output_filename is None:
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        safe_name = "".join(c for c in student_name if c.isalnum() or c in (' ', '-', '_')).rstrip()
        output_filename = f"{safe_name}_Educational_Report_{timestamp}.pdf"
    
    output_path = os.path.join(output_dir, output_filename)
    
    # Convert markdown to HTML
    html_content = markdown.markdown(markdown_content, extensions=['tables', 'fenced_code'])
    
    # Add CSS styling for professional appearance
    styled_html = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <style>
            body {{
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
            }}
            h1 {{
                color: #2c3e50;
                border-bottom: 3px solid #3498db;
                padding-bottom: 10px;
            }}
            h2 {{
                color: #34495e;
                margin-top: 30px;
                border-left: 4px solid #3498db;
                padding-left: 15px;
            }}
            h3 {{
                color: #2c3e50;
                margin-top: 25px;
            }}
            ul, ol {{
                padding-left: 20px;
            }}
            li {{
                margin-bottom: 5px;
            }}
            strong {{
                color: #2c3e50;
            }}
            .header {{
                text-align: center;
                margin-bottom: 30px;
                padding: 20px;
                background-color: #f8f9fa;
                border-radius: 8px;
            }}
            .footer {{
                margin-top: 40px;
                padding: 20px;
                background-color: #f8f9fa;
                border-radius: 8px;
                text-align: center;
                font-size: 0.9em;
                color: #666;
            }}
            table {{
                width: 100%;
                border-collapse: collapse;
                margin: 20px 0;
            }}
            th, td {{
                border: 1px solid #ddd;
                padding: 12px;
                text-align: left;
            }}
            th {{
                background-color: #f2f2f2;
                font-weight: bold;
            }}
        </style>
    </head>
    <body>
        <div class="header">
            <h1>üìä Educational Analysis Report</h1>
            <p><strong>Generated:</strong> {datetime.now().strftime("%B %d, %Y at %I:%M %p")}</p>
        </div>
        
        {html_content}
        
        <div class="footer">
            <p>This report was generated by the Student Report Card RAG System</p>
            <p>Williamson County Schools ‚Ä¢ Educational Technology Department</p>
        </div>
    </body>
    </html>
    """
    
    # PDF generation options
    options = {
        'page-size': 'Letter',
        'margin-top': '0.75in',
        'margin-right': '0.75in',
        'margin-bottom': '0.75in',
        'margin-left': '0.75in',
        'encoding': "UTF-8",
        'no-outline': None,
        'enable-local-file-access': None
    }
    
    try:
        # Generate PDF
        pdfkit.from_string(styled_html, output_path, options=options)
        print(f"‚úÖ PDF report generated successfully: {output_path}")
        return output_path
        
    except Exception as e:
        print(f"‚ùå Error generating PDF: {str(e)}")
        print("üí° Note: PDF generation requires wkhtmltopdf to be installed")
        print("   Install with: brew install wkhtmltopdf (macOS) or apt-get install wkhtmltopdf (Ubuntu)")
        
        # Fallback: save as HTML
        html_path = output_path.replace('.pdf', '.html')
        with open(html_path, 'w', encoding='utf-8') as f:
            f.write(styled_html)
        print(f"üìÑ Saved as HTML instead: {html_path}")
        return html_path


def create_report_with_export(formatted_report: str, student_name: str = "Student") -> tuple[str, str]:
    """
    Create both a formatted report display and export to PDF.
    
    Args:
        formatted_report: The formatted markdown report content
        student_name: Student name for file naming
        
    Returns:
        tuple: (display_content, pdf_path)
    """
    
    # Add export information to the display
    export_info = f"""

---

## üì• Export Options

**PDF Report Generated:** This analysis has been formatted as a professional PDF report suitable for:
- Parent conferences and meetings
- Educational planning sessions  
- Student portfolio documentation
- Administrative review

**File Location:** `reports/{student_name}_Educational_Report_[timestamp].pdf`

**Sharing:** The PDF can be easily shared with teachers, parents, and educational specialists.

---

*Report generated by Student Report Card RAG System - {datetime.now().strftime("%B %d, %Y")}*
"""
    
    display_content = formatted_report + export_info
    
    # Generate PDF
    pdf_path = markdown_to_pdf(formatted_report, student_name=student_name)
    
    return display_content, pdf_path


# Example usage and testing
if __name__ == "__main__":
    # Test with sample markdown content
    sample_report = """
# üìä Educational Analysis Report

**Student:** Benjamin Nguyen  
**Date:** January 15, 2025  
**School Year:** 2024-2025  
**Grade:** First Grade  

## üéØ Executive Summary
Benjamin shows strong potential in mathematics and science but needs targeted support in literacy development, particularly in writing and phonics patterns.

## üë§ Student Profile
### Strengths
- Excellent attendance (130 days present, 0 absent)
- Strong mathematical reasoning abilities
- Good social interaction skills

### Areas for Growth  
- Double-letter spelling patterns in writing
- Narrative writing development
- Self-directed learning behaviors

## üìö Detailed Academic Analysis

### üìñ Literacy Development
Benjamin demonstrates progress in reading but needs focused intervention in writing skills, particularly with double-letter spellings and narrative structure.

### üî¢ Mathematics Skills  
Strong foundation in counting and number recognition. Some support needed in comparing two-digit numbers and understanding equality concepts.

### ü§ù Social & Behavioral Growth
Generally positive social skills with room for improvement in self-direction and following multi-step directions.
"""
    
    # Test PDF generation
    pdf_path = markdown_to_pdf(sample_report, student_name="Benjamin_Nguyen")
    print(f"Test PDF generated at: {pdf_path}") 